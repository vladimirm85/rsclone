paths:


  /saves:

    get:
      summary: Takes user ID from token and returns all user saves
      operationId: getAllSaves
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Saves'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save

    post:
      summary: Takes user ID from the token, Save data from the body and creates user Save
      operationId: createSave
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/SaveData'
      responses:
        '201':
          $ref: '#/components/responses/Save'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save


  /saves/{id}:

    get:
      summary: Takes user ID from the token, Save ID from the parameters and returns user Save
      operationId: getSaveById
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SaveId'
      responses:
        '200':
          $ref: '#/components/responses/Save'
        '404':
          $ref: '#/components/responses/SaveNotFound'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save

    put:
      summary: Takes user ID from the token, Save ID from the parameters, Save data from the body and creates user Save
      operationId: updateSave
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SaveId'
      requestBody:
        $ref: '#/components/requestBodies/SaveData'
      responses:
        '200':
          $ref: '#/components/responses/Save'
        '404':
          $ref: '#/components/responses/SaveNotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save

    delete:
      summary: Takes user ID from the token, Save ID from the parameters and delete the Save
      operationId: deleteSave
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SaveId'
      responses:
        '200':
          $ref: '#/components/responses/SaveDeleted'
        '404':
          $ref: '#/components/responses/SaveNotFound'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save


  /auth/login:
    post:
      summary: Takes Login data from the body and returns
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/LoginData'
      responses:
        '200':
          $ref: '#/components/responses/Save'
        '404':
          $ref: '#/components/responses/SaveNotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save


components:

  responses:

    Save:
      description: Save
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              payload:
                $ref: 'schemas.yaml'

    Saves:
      description: Array of Save.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              payload:
                type: array
                items:
                  $ref: 'schemas.yaml'

    SaveDeleted:
      description: Save Deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              payload:
                type: string
                example: 'Deleted'

    SaveNotFound:
      description: Save not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: No such save

    UserNotFound:
      description: User not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: No such user with email - email

    EmailNotVerified:
      description: Email not verified
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: email is not verified

    Error:
      description: Error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Error message

    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: NameOfTheField validation error

    Unauthorized:
      description: Unauthorized


  requestBodies:

    SaveData:
      description: Save data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              saveData:
                type: object

    LoginData:
      description: Login Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: test@test.com
              password:
                type: string
                example: 123f56W2178w

    RegistrationData:
      description: Registration Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: test@test.com
              password:
                type: string
                example: 123f56W2178w
              repeatPassword:
                type: string
                example: 123f56W2178w

  parameters:

    SaveId:
      name: id
      in: path
      description: Save ID
      required: true
      schema:
        type: string
        example: 60048e26a8486d510406b33f
