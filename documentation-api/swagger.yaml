openapi: 3.0.0
info:
  title: Arkanoid API
  description: API for Arkanoid game
  version: 1.0.0
  contact:
    name: Vladimir Mazhirin
    url: https://github.com/vladimirm85
    email: vladimirm85@gmail.com
servers:
  - url: https://arkanoid-rss-be.herokuapp.com
    description: Production server



paths:


  /saves:

    get:
      summary: Takes user ID from token and returns all user saves
      operationId: getAllSaves
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/Saves'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save

    post:
      summary: Takes user ID from the token, Save data from the body and creates user Save
      operationId: createSave
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/SaveData'
      responses:
        '201':
          $ref: '#/components/responses/Save'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save


  /saves/{id}:

    get:
      summary: Takes user ID from the token, Save ID from the parameters and returns user Save
      operationId: getSaveById
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SaveId'
      responses:
        '200':
          $ref: '#/components/responses/Save'
        '404':
          $ref: '#/components/responses/SaveNotFound'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save

    put:
      summary: Takes user ID from the token, Save ID from the parameters, Save data from the body and creates user Save
      operationId: updateSave
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SaveId'
      requestBody:
        $ref: '#/components/requestBodies/SaveData'
      responses:
        '200':
          $ref: '#/components/responses/Save'
        '404':
          $ref: '#/components/responses/SaveNotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save

    delete:
      summary: Takes user ID from the token, Save ID from the parameters and delete the Save
      operationId: deleteSave
      security:
        - bearerAuth: []
      parameters:
        - $ref: '#/components/parameters/SaveId'
      responses:
        '200':
          $ref: '#/components/responses/SaveDeleted'
        '404':
          $ref: '#/components/responses/SaveNotFound'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Save


  /auth/register:
    post:
      summary: Takes Registration data from the body and send verification email
      operationId: register
      requestBody:
        $ref: '#/components/requestBodies/RegistrationData'
      responses:
        '200':
          $ref: '#/components/responses/EmailSend'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                oneOf:
                 - $ref: '#/components/schemas/DataValidationFail'
                 - $ref: '#/components/schemas/EmailIsTaken'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Auth


  /auth/login:
    post:
      summary: Takes Login data from the body and returns Bearer token
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/LoginData'
      responses:
        '201':
          $ref: '#/components/responses/BearerToken'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/UserNotFound'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/DataValidationFail'
                  - $ref: '#/components/schemas/EmailVerificationFail'
        '422':
          $ref: '#/components/responses/AccessDenied'
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Auth


  /auth/google:
    get:
      summary: Redirect to google login page then redirect to FRONT_BASE_URL/social-login-success with token in parametrs
      operationId: loginGoogle
      responses:
        '302':
          description: Found
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Auth


  /auth/github:
    get:
      summary: Redirect to github login page then redirect to FRONT_BASE_URL/social-login-success with token in parametrs
      operationId: loginGithub
      responses:
        '302':
          description: Found
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Auth


  /auth/facebook:
    get:
      summary: Redirect to facebook login page then redirect to FRONT_BASE_URL/social-login-success with token in parametrs
      operationId: loginFacebook
      responses:
        '302':
          description: Found
        '500':
          $ref: '#/components/responses/Error'
      tags:
        - Auth



components:


  schemas:

    Save:
      type: object
      properties:
        _id:
          type: string
          example: 60048e26a8486d510406b33f
        saveData:
          type: object
        userId:
          type: string
          example: 600485e573f5ce001796f558
        createdAt:
          type: string
          format: date
          example: 2021-01-17T19:21:10.492+00:00

    DataValidationFail:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: ${fieldName} validation error

    EmailVerificationFail:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: email ${email} is not verified

    EmailIsTaken:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Sorry, email ${email} has already been taken!


  securitySchemes:

    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


  responses:

    BearerToken:
      description: Bearer Token
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              payload:
                type: string
                example: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InRzeWJ1bGtvLmFydGVtQGdtYWlsLmNvbSIsInVzZXJJZCI6IjYwMGYyYTZiZWFmODk1MDAxN2QwNDdkZiIsImlhdCI6MTYxMTYwNzQwNywiZXhwIjoxNjExNjkzODA3fQ.rjSpg9yn-Re1MJeaYTxPgq5bqHuS_QZ56odN8Z0c750

    EmailSend:
      description: Email Send
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              payload:
                type: string
                example: Email send

    Save:
      description: Save
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              payload:
                $ref: '#/components/schemas/Save'

    Saves:
      description: Array of Save.
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              payload:
                type: array
                items:
                  $ref: '#/components/schemas/Save'

    SaveDeleted:
      description: Save Deleted
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              payload:
                type: string
                example: 'Deleted'

    SaveNotFound:
      description: Save not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: No such save

    UserNotFound:
      description: User not found
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: No such user with email - ${email}

    EmailNotVerified:
      description: Email not verified
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: email ${email} is not verified

    AccessDenied:
      description: Access denied
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Email or password is incorrect

    Error:
      description: Error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: Error message

    ValidationError:
      description: Validation Error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: ${fieldName} validation error

    Unauthorized:
      description: Unauthorized


  requestBodies:

    SaveData:
      description: Save data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              saveData:
                type: object

    LoginData:
      description: Login Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: test@test.com
              password:
                type: string
                example: 123f56W2178w

    RegistrationData:
      description: Registration Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: test@test.com
              password:
                type: string
                example: 123f56W2178w
              repeatPassword:
                type: string
                example: 123f56W2178w

  parameters:

    SaveId:
      name: id
      in: path
      description: Save ID
      required: true
      schema:
        type: string
        example: 60048e26a8486d510406b33f
